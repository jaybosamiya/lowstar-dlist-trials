# My notes on _almost_ everything I ran to try and understand why it
# works with --detail_errors but doesn't work without

mkdir without-detail-errors/
mkdir with-detail-errors/
fstar --admit_except '(DListRef.dlisthead_update_head, 2)' DListRef.fst --log_queries --z3rlimit_factor 100 # The 100 is waaaay more than sufficient to prevent timeout
mv *.smt2 without-detail-errors/
fstar --admit_except '(DListRef.dlisthead_update_head, 2)' DListRef.fst --log_queries --z3rlimit_factor 100 --detail_errors
mv *.smt2 with-detail-errors/

z3 without-detail-errors/queries-DListRef.smt2 | grep -B1 'false'
# Failing labels:
#   label_314
#   label_310

cd with-detail-errors/
rgrep -L '@disable_label_label_310'
# queries-DListRef-62.smt2
# queries-DListRef.smt2
rgrep -L '@disable_label_label_314'
# queries-DListRef.smt2
# queries-DListRef-58.smt2
cd ..

# Thus, the interesting files are:
#    queries-DListRef-62.smt2
#    queries-DListRef-58.smt2

cd with-detail-errors/
for i in *.smt2; do
    z3 $i | tee ${i}.log
done
cd ..
rgrep -L 'model is not available' *.log
# Crickets.... No output...
# So all do infact verify fine

function enable-and-run() {
    TEMPFILE=$(mktemp tmp.XXXXXXXXX.smt2)
    cat "$1" | tr '\n' '\f' | sed 's/(assert (! (= label_'$2'\ftrue)\f:named @disable_label_label_'$2'))//' | tr '\f' '\n' > ${TEMPFILE}
    z3 ${TEMPFILE}
    rm ${TEMPFILE}
}

function enable-and-test() {
    VAL=$(enable-and-run "$1" $2)
    (echo ${VAL} | grep -m 1 'model is not available' >/dev/null) && echo "$i passed" || \
	    ((echo ${VAL} | grep -m 1 'false' >/dev/null) && echo "$i FAILED <----- via 'false'" || \
		     echo "$i FAILED <----- not via 'false'")
}

function try-enabling-all() {
    echo "[+] Trying all for $1"
    for i in $(grep 'disable_label_label_' "$1" | cut -c 29- | rev | cut -c 3- | rev); do
	enable-and-test "$1" $i
    done
}

try-enabling-all with-detail-errors/queries-DListRef-62.smt2
try-enabling-all with-detail-errors/queries-DListRef-58.smt2

# Passes for everything except
#    with-detail-errors/queries-DListRef-62.smt2 314
#    with-detail-errors/queries-DListRef-58.smt2 310
# Both fail via "false"
enable-and-run with-detail-errors/queries-DListRef-62.smt2 314
enable-and-run with-detail-errors/queries-DListRef-58.smt2 310

# Things that need to be disabled in the without-detail-errors case to have proof go through:
# (assert (and
#	 ;; label_275 label_276 label_277 label_278 label_279
#	 ;; label_280 label_281 label_282 label_283 label_284
#	 ;; label_285 label_286 label_287 label_288 label_289
#	 ;; label_290 label_291 label_292 label_293 label_295
#	 ;; label_296 label_297 label_298 label_299 label_300
#	 ;; label_301 label_302 label_303 label_304 label_305
#	 ;; label_306 label_307 label_308 label_310 label_311
#	 ;; label_312 label_313
#	 label_314 ;; <---- causes "incomplete quantifiers" if commented out
#	 ;; label_315 label_316 label_317 label_318 label_319
#	 ;; label_320 label_321 label_322 label_323 label_324
#	 ;; label_325 label_326 label_327 label_329 label_330
#	 ;; label_331 label_332
#	 label_333 ;; <---- causes "incomplete quantifiers" if commented out
#	 ;; label_334 label_335 label_336 label_337 label_338
#	 label_340 ;; <---- causes "incomplete quantifiers" if commented out
#	 ;; label_341 label_342 label_343 label_344 label_345
#	 ;; label_346 label_347 label_348 label_349 label_351
#	 ;; label_352 label_353 label_354
#	 label_355 ;; <---- causes "incomplete quantifiers" if commented out
#	 ;; label_356 label_357 label_358 label_359 label_360
#	 ;; label_361 label_362 label_364 label_365 label_366
#	 ;; label_367
#	 label_368 ;; <---- causes proof to take long (~2min) if commented out
#	 ;; label_369 label_370 label_371
#	 ))
